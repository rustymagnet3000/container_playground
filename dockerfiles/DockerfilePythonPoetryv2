# 243MB base image from Docker Hub
FROM python:3.8-slim-buster

# Setup pipenv to avoid spurious warnings
ENV PYTHONDONTWRITEBYTECODE=on \
    PYTHONFAULTHANDLER=on \
    PIP_NO_CACHE_DIR=off \
    PIP_DISABLE_PIP_VERSION_CHECK=on \
    PYTHONUNBUFFERED=on \
    POETRY_VERSION=1.1.6 \
    POETRY_HOME="/opt/poetry" \
    POETRY_NO_INTERACTION=1 \
    PYSETUP_PATH="/opt/pysetup" \
    VENV_PATH="/opt/pysetup/.venv"

# prepend poetry and venv to path
ENV PATH="$POETRY_HOME/bin:$VENV_PATH/bin:$PATH"

# Set home
ARG HOME=/root
RUN echo "Home: ${HOME}"
WORKDIR ${HOME}

# required to install Zip and keep size of Image down: https://pythonspeed.com/articles/system-packages-docker/
COPY install_zip.sh .
RUN chmod +x install_zip.sh \
  && ./install_zip.sh \
  && rm -f install_zip.sh

# Install poetry. Pin version.
RUN pip install --no-cache-dir poetry==${POETRY_VERSION}

# Copy dependency files as these change less often ( also required for Snyk scan )
COPY poetry.lock pyproject.toml ${HOME}/

# Poetry defaults to create a virtual env. Added here to make it clear to reader.
RUN poetry config virtualenvs.create true \
    # --no-dev specifies no development dependencies installed ( i.e. Pytest ).
    # dev dependencies defined in pyproject.toml section: [tool.poetry.dev-dependencies]
    # You don't want pytest in a production container
    # quick and clean to run Pytest as part of CI/CD flow
    && poetry install --no-dev

# Copy source files as these more often than dependency files
# First line required to preserve Folder Structure that Poetry expects
COPY security_iam_dormant_account_checker ${HOME}/security_iam_dormant_account_checker/
# Copy script onto image that generates the Zip file for AWS upload
COPY zip_for_lambda_upload.sh ${HOME}

RUN ["chmod", "+x", "zip_for_lambda_upload.sh"]
CMD ["./zip_for_lambda_upload.sh"]
