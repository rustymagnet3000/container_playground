# 238MB base image from Docker Hub
FROM python:3.8-slim-buster

# Setup pipenv to avoid spurious warnings
ENV PYTHONDONTWRITEBYTECODE=on \
    PYTHONFAULTHANDLER=on \
    PIP_NO_CACHE_DIR=off \
    PIP_DISABLE_PIP_VERSION_CHECK=on \
    PYTHONUNBUFFERED=on \
    POETRY_VERSION=1.1.6 \
    POETRY_HOME="/opt/poetry" \
    POETRY_NO_INTERACTION=1 \
    POETRY_VIRTUALENVS_IN_PROJECT=true \
    PYSETUP_PATH="/opt/pysetup" \
    VENV_PATH="/opt/pysetup/.venv"

# prepend poetry and venv to path
ENV PATH="$POETRY_HOME/bin:$VENV_PATH/bin:$PATH"

# Set home
ARG HOME=/root/
RUN echo "Home is: ${HOME}"

# Install poetry. Pin version.
RUN pip install --no-cache-dir poetry==${POETRY_VERSION}

# Copy dependency files as these change less often
# But the pyproject.toml is more than just dependencies; https://pythonspeed.com/articles/poetry-vs-docker-caching/
WORKDIR $PYSETUP_PATH
COPY poetry.lock pyproject.toml ./

# Copy dependency files ( also required for Snyk
COPY poetry.lock pyproject.toml Dockerfile ${HOME}

# Project initialization:
RUN poetry config virtualenvs.create true \
    && poetry install --no-dev

# Copy dependency files as these change less often
COPY ./src ${HOME}

# ls -l: #main.py  poetry.lock  pyproject.toml
WORKDIR ${HOME}

CMD ["sh", "-c", "poetry run python3 main.py"]